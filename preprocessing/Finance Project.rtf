{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25720\viewh10180\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 Finance Project\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf0 \ulnone Notes:\
	Stock recommender \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b \cf0 Project Examples:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf0 	Frying Pan Stock recommender - https://www.youtube.com/watch?v=spDbteQAlbE\
		Step 0: Problem Statement \
			Machine Learning Model to filter useful posts on WSB instead of going through the shit posts\
			Additional Unique Insights\
			Summary:\
				Aquire posts from reddit -> get() posts (Pushshift API) -> Star in CSV\
				Cleaned Data -> model.train() with Naive Bayes -> Prediction Model to Use\
				We can then use this model to predict if post is useful or not\
		Step 1: Pre Data Processing\
			Gather Data \
			Used PostShift API to gather queries\
			Api limitations\
			Iex cloud finance API to:	\
				1. Validate tickers extracted from text\
					Post -\'93Buy TSLA\'94 -> Stock-\'93TSLA\'94\
				2. Categories/ Label the data\
					Calculates the increase/decrease in price from when posted to label if good/bad post\
				Problems - Finance API limit so used multiple free trials with different emails\
			Used Spark NLP - Natural Language processing Library:\
				1. Each text is cleaned of Puncation\
				2. Separated into Individual Words\
				3. Lemmatised - Similar Words Grouped Together\
				4. Vectorised - Each word will be represented by 1 if present or 0 if not in the given documents \
			The machine will use this to train itself\
	\
		Step 2: Model Training\
			Post is good or bad depending on growth percentage:\
				good > 6% growth\
				bad < 6% growth\
				6% is bit arbitrary \
			To train used pi sparks machine learning libraries and naive bays classifier\
			Baye\'92s Theorem - used already in Spam so has use in text posts\
\
		Step 3: Other Algorithims and conclusion\
			Tried to use other  machine learning algorithms like random forest, clustering, linear regression to see if he could get different insights\
			Similar to Naive Bayes so no use really \
			Has a model that can classify any Wall Street bets post as good or bad with 65% accuracy\
			Improve using more data\
\
	JomaTech Intrade - YouTube vid\
		Made using Python to trade contracts using black-scholes binary option pricing\
		Intrade API to automate trades\
		Data mined linefeeds for live index pricing\
		\
\
Ideas:\
	Rip off Pans idea using R/investing and potentially ranking user - \
	Penny stocks could work as the posts vary, some have extensive dd while others are simply just pictures with a title.\
\
Notes:\
Can\'92t really use the award/hottest/upvote system because they can be filled with memes\
Companies that started as penny stocks\
	}